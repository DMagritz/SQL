/* Create table about the movie stars and what they do here */
CREATE TABLE movie_stars (
    id INTEGER PRIMARY KEY,
    name TEXT,
    dob TEXT,
    age INTEGER,
    sex TEXT,
    birthplace TEXT,
    profession TEXT,
    costar_id INTEGER
);
INSERT INTO movie_stars VALUES (1, "Blake Lively", "1987-08-25", 35, "F", "Los Angeles, California", "actress", 5);
INSERT INTO movie_stars VALUES (2, "Ryan Reynolds", "1976-10-23", 46, "M", "Vancouver, Canada", "actor", 6);
INSERT INTO movie_stars VALUES (3, "Emily Blunt", "1983-02-23", 39, "F", "London, England", "actress", 4);
INSERT INTO movie_stars VALUES (4, "John Krasinski", "1979-10-20", 43, "M", "Boston, Massachusetts", "actor", 3);

CREATE TABLE movies (
    id INTEGER PRIMARY KEY,
    name TEXT,
    release_year INTEGER,
    movie_star_id INTEGER
);
INSERT INTO movies VALUES (1, "The Devil Wears Prada", 2006, 3);
INSERT INTO movies VALUES (2, "The Age of Adeline", 2015, 1);
INSERT INTO movies VALUES (3, "Something Borrowed", 2011, 4);
INSERT INTO movies VALUES (4, "Deadpool 1", 2016, 2);
INSERT INTO movies VALUES (5, "Deadpool 2", 2018, 2);
INSERT INTO movies VALUES (6, "A Simple Favor", 2018, 1);
INSERT INTO movies VALUES (7, "The Shallows", 2016, 1);
INSERT INTO movies VALUES (8, "A Quiet Place 1", 2018, 4);
INSERT INTO movies VALUES (9, "A Quiet Place 2", 2021, 4);
INSERT INTO movies VALUES (10, "A Quiet Place 1", 2018, 3);
INSERT INTO movies VALUES (11, "A Quiet Place 2", 2021, 3);
INSERT INTO movies VALUES (12, "The Proposal", 2009, 2);
INSERT INTO movies VALUES (13, "Promised Land", 2013, 4);
INSERT INTO movies VALUES (14, "The Adam Project", 2022, 2);

CREATE TABLE movie_star_couples (
    id INTEGER PRIMARY KEY,
    moviestar1_id INTEGER,
    moviestar2_id INTEGER
);
INSERT INTO movie_star_couples VALUES (1, 1, 2);
INSERT INTO movie_star_couples VALUES (2, 3, 4);

-- which movie stars are in each movie?
SELECT movie_stars.name, movies.name
    FROM movie_stars
    LEFT JOIN movies
    ON movie_stars.id = movies.movie_star_id;

-- which movie stars are co-stars?
SELECT movie_stars.name, costars.name AS costar
    FROM movie_stars
    JOIN movie_stars AS costars
    ON movie_stars.costar_id = costars.id;

-- which movie stars are couples?
SELECT a.name, b.name FROM movie_star_couples
    JOIN movie_stars AS a
    ON movie_star_couples.moviestar1_id = a.id 
    JOIN movie_stars AS b
    ON movie_star_couples.moviestar2_id = b.id;
